// Code generated by goagen v1.3.1, DO NOT EDIT.
//
// API "Daikon-BE": Application Media Types
//
// Command:
// $ goagen
// --design=github.com/Kumi-comb/Daikon-BE/design
// --out=$(GOPATH)\src\github.com\Kumi-comb\Daikon-BE
// --version=v1.3.1

package client

import (
	"net/http"
)

// Json media type (default view)
//
// Identifier: appliaction/json; view=default
type JSON struct {
	Lines []string            `form:"lines,omitempty" json:"lines,omitempty" yaml:"lines,omitempty" xml:"lines,omitempty"`
	Times []map[string]string `form:"times,omitempty" json:"times,omitempty" yaml:"times,omitempty" xml:"times,omitempty"`
}

// DecodeJSON decodes the JSON instance encoded in resp body.
func (c *Client) DecodeJSON(resp *http.Response) (*JSON, error) {
	var decoded JSON
	err := c.Decoder.Decode(&decoded, resp.Body, resp.Header.Get("Content-Type"))
	return &decoded, err
}

// Json media type (default view)
//
// Identifier: application/json; view=default
type JSON struct {
	CorporationName *string `form:"CorporationName,omitempty" json:"CorporationName,omitempty" yaml:"CorporationName,omitempty" xml:"CorporationName,omitempty"`
	ID              *string `form:"ID,omitempty" json:"ID,omitempty" yaml:"ID,omitempty" xml:"ID,omitempty"`
	LineName        *string `form:"LineName,omitempty" json:"LineName,omitempty" yaml:"LineName,omitempty" xml:"LineName,omitempty"`
}

// DecodeJSON decodes the JSON instance encoded in resp body.
func (c *Client) DecodeJSON(resp *http.Response) (*JSON, error) {
	var decoded JSON
	err := c.Decoder.Decode(&decoded, resp.Body, resp.Header.Get("Content-Type"))
	return &decoded, err
}
