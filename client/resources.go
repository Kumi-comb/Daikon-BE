// Code generated by goagen v1.3.1, DO NOT EDIT.
//
// API "Daikon-BE": resources Resource Client
//
// Command:
// $ goagen
// --design=github.com/Kumi-comb/Daikon-BE/design
// --out=$(GOPATH)\src\github.com\Kumi-comb\Daikon-BE
// --version=v1.3.1

package client

import (
	"context"
	"fmt"
	"net/http"
	"net/url"
)

// SupportLineResourcesPath computes a request path to the supportLine action of resources.
func SupportLineResourcesPath() string {

	return fmt.Sprintf("/resources/supports/lines")
}

// 対応している路線とその固有IDを返す
func (c *Client) SupportLineResources(ctx context.Context, path string) (*http.Response, error) {
	req, err := c.NewSupportLineResourcesRequest(ctx, path)
	if err != nil {
		return nil, err
	}
	return c.Client.Do(ctx, req)
}

// NewSupportLineResourcesRequest create the request corresponding to the supportLine action endpoint of the resources resource.
func (c *Client) NewSupportLineResourcesRequest(ctx context.Context, path string) (*http.Request, error) {
	scheme := c.Scheme
	if scheme == "" {
		scheme = "http"
	}
	u := url.URL{Host: c.Host, Scheme: scheme, Path: path}
	req, err := http.NewRequest("GET", u.String(), nil)
	if err != nil {
		return nil, err
	}
	if c.JWTSigner != nil {
		if err := c.JWTSigner.Sign(req); err != nil {
			return nil, err
		}
	}
	return req, nil
}
